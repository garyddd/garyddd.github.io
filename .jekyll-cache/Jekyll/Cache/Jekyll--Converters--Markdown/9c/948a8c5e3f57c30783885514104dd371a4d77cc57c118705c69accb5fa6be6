I"ga<h2 id="感知机--perceptron">感知机 – perceptron</h2>

<blockquote>
  <p>感知机是二分类的线性分类模型，输出为+1和-1。</p>

  <p>感知机学习旨在求出将训练数据进行线性划分的分离超平面，分为原始形式和对偶形式。</p>
</blockquote>

<p><strong>感知机模型</strong> ：$w$叫做权值（weight）或权值向量（weight vector），b叫做偏置（bias）
\(f(x)=sign(w\cdot x+b)\\
sign(x)=
\begin{cases}
+1,x\geq0\\
-1,x&lt;1
\end{cases}\)
<strong>感知机学习策略</strong>：假设训练数据是线性可分的，感知机的学习的目标是求得一个能够将训练集正实例点和负实例点正确分开的分离超平面。</p>

<p><strong>损失函数：</strong></p>

<p>损失函数的一个自然选择是错误分类点的总数。但是这样的损失函数不是参数$w,b$的连续可导函数，不以优化，因此感知机采用误分类点距离超平面$S$的总距离，不考虑$\frac{1}{||w||}$就得到感知机学习的损失函数：
\(-\frac{1}{||w||}\sum_{x_i}y_i(w\cdot x_i+b)\\
L(w,b) = -\sum_{x_i}y_i(w\cdot x_i+b)\)
$||w||$是$w$的$L_2$范数。显然损失函数$L(w,b)$是非负的，误分类点越少，距离越近，损失函数值就越小。</p>

<p><strong>感知机学习算法</strong></p>

<p>给定训练集$T = {(x_1,y_1),\cdots,(x_N,y_N)} $，求参数$w,b$，使其为一下损失函数极小化问题的解：
\(\min_{w,b}L(w,b)=-\sum_{x_i}y_i(w\cdot x_i+b)\)
首先任选一个超平面$w_0,b_0$，然后用梯度下降法不断地极小化目标函数。假设误分类点集合$M$是固定的，那么损失函数$L(w,b)$的梯度：
\(\nabla_wL(w,b)=-\sum_{x_i\in M}y_ix_i\\
\nabla_bL(w,b)=-\sum_{x_i\in M}y_i\)
随机选取一个误分类点$(x_i,y_i)$，对$w,b$进行更新：
\(w\leftarrow w+\eta y_ix_i\\
b\leftarrow b+\eta y_i\)
$\eta$是步长，在统计学习中又称为学习率（learning rate)</p>

<blockquote>
  <p>算法 – 感知机学习算法的原始形式</p>

  <p>输入：训练集$T = {(x_1,y_1),\cdots,(x_N,y_N)}$；学习率$\eta$;</p>

  <p>输出：$w,b$；感知机模型$f(x)=sign(w\cdot x+b)$。</p>

  <ol>
    <li>
      <p>选取初值$w_0,b_0$；</p>
    </li>
    <li>
      <p>在训练集中选取数据$(x_i,y_i)$；</p>
    </li>
    <li>
      <p>如果$y_i(w\cdot x+b)\leq0$，
\(w\leftarrow w+\eta y_ix_i\\
b\leftarrow b+\eta y_i\)</p>
    </li>
    <li>
      <p>转至2，直至训练集中没有误分类点。</p>
    </li>
  </ol>
</blockquote>

<p>假设对$w,b$更新n次之后，其关于$(x_i,y_i)$增量分别为$\alpha_jy_jx_j$和$\alpha_iy_i$，$\alpha_i=n_i\eta$，$n_i$是点$(x_i,y_i)$被误分类的次数，当$\eta =1$时，$\alpha_i$表示第$i$个实例点由于误分而进行更新的次数。实例点更新次数越多，意味着距离分离超平面越近，也越难正确分类，这样的实例对学习结果影响最大。</p>

<blockquote>
  <p>算法 – 感知机学习算法的对偶形式</p>

  <p>输入：线性可分的数据集$T$；学习率$\eta$；</p>

  <p>输出：$\alpha,b$；感知机模型$f(x)=sign(\sum_{j=1}^{N}\alpha_jy_jx_j\cdot x+b)$，其中$\alpha=(\alpha_1,\cdots,\alpha_N)^T$。</p>

  <ol>
    <li>
      <p>$\alpha\leftarrow 0,b\leftarrow 0$；</p>
    </li>
    <li>
      <p>在训练集中选取数据$x_i,y_i$；</p>
    </li>
    <li>
      <p>如果$y_i(\sum_{j=1}^{N}\alpha_jy_jx_j\cdot x+b)\le0$，
\(\alpha_i\leftarrow\alpha_i +\eta\\
b\leftarrow b+\eta y_i\)</p>
    </li>
    <li>
      <p>转至2直到没有误分类数据。</p>
    </li>
  </ol>
</blockquote>

<p>对偶形式中训练实例仅以内积形式存在，可以预先将训练集中实例间的内积计算，即Gram矩阵（Gram matrix):
\(G=[x_i\cdot x_j]_{N\times N}\)
<strong>例题</strong></p>

<p>$训练数据集中正实例点x_1=(3,3)^T,x_2=(4,3)^T，负实例点x_3=(1,1)^T，求感知机模型$</p>

<blockquote>
  <p>原始形式：
构建最优化问题：
\(\min_{w,b}L(w,b) = -\sum_{x_i\in M}y_i(w\cdot x_i+b)\)
取$w_0=0,b_0=0$</p>

  <p>对$x_1=(3,3)^T$，$y_1(w_0\cdot x_1+b_0)=0$，未被正确分类，更新$w,b$
\(w_1 = w_0+y_1x_1 = (3,3)^T,b_1=b_0+y_1=1\)
得到线性模型
\(w_1\cdot x+b_1 = 3x^{(1)}+3x^{(2)}+1\)
对$x_1,x_2$，显然，$y_i(w_1\cdot x_i+b_1)&gt;0$，正确分类，对$x_3$错误分类，更新$w,b$
\(w_2 = w_1+y_3x_3 = (2,2)^T,b_2=b_1+y_3=0\)
得到线性模型
\(w_1\cdot x+b_1 = 2x^{(1)}+2x^{(2)}\)
直到，对所有的数据点都正确分类，损失函数达到极小。</p>

  <p>得到：$w_7=(1,1)^T,b_7=-3$</p>

  <p>感知机模型为：$f(x)=sign(x^{(1)}+x^{(2)}-3)$</p>

  <p><em>不同的初值或选取不同的误分类点，解可以不同</em></p>
</blockquote>

<blockquote>
  <p>对偶形式：</p>

  <p>取$\alpha_i=0,i=1,2,3,b=0,\eta =1$</p>

  <p>计算Gram矩阵
\(G = \begin{bmatrix}
18&amp;21&amp;6\\
21&amp;25&amp;7\\
6&amp;7&amp;2
\end{bmatrix}\)
对$x_1=(3,3)^T,y_1(\sum_{j=1}^{N}\alpha_jy_jx_j\cdot x_1+b_1)=0$被误分，更新$\alpha_1,b$</p>

  <p>$\alpha_1=\alpha_1+1=1,\alpha_2=0,\alpha_3=0,b=b+y_1=1$</p>

  <p>得到模型：
\(\sum_{j=1}^{3}\alpha_jy_jx_j\cdot x_i+b = x_1\cdot x_i+1\)
对$x_3=(1,1)^T,y_3(x_1\cdot x_3+1)=-1$被误分，更新$\alpha_3,b$</p>

  <p>$\alpha_1=1,\alpha_2=0,\alpha_3 = \alpha_3+1=1,b=b+y_3=0$</p>

  <p>迭代，直到没有误分数据。</p>
</blockquote>

<p><strong>python实现</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>


<span class="k">def</span> <span class="nf">create_datasets</span><span class="p">():</span>
    <span class="n">data</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">],[</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">],[</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">],[</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">],[</span><span class="mi">2</span><span class="p">,</span><span class="mi">0</span><span class="p">]])</span>
    <span class="n">label</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
    <span class="k">return</span> <span class="n">data</span><span class="p">,</span> <span class="n">label</span>


<span class="k">class</span> <span class="nc">Perceptron</span><span class="p">():</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">samples</span><span class="p">,</span> <span class="n">label</span><span class="p">,</span> <span class="n">eta</span><span class="o">=</span><span class="mi">1</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">samples</span> <span class="o">=</span> <span class="n">samples</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">label</span> <span class="o">=</span> <span class="n">label</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">eta</span> <span class="o">=</span> <span class="n">eta</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">w</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">zeros</span><span class="p">(</span><span class="n">samples</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">b</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="c1"># for dual model
</span>        <span class="bp">self</span><span class="p">.</span><span class="n">alpha</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">zeros</span><span class="p">(</span><span class="n">samples</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">G</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">dot</span><span class="p">(</span><span class="n">samples</span><span class="p">,</span><span class="n">samples</span><span class="p">.</span><span class="n">T</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">train_origin</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="c1"># 原始形式
</span>        <span class="n">ix_all</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">0</span><span class="p">])</span>
        <span class="k">while</span> <span class="n">np</span><span class="p">.</span><span class="nb">any</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">(</span><span class="n">ix_all</span><span class="p">)</span><span class="o">&lt;=</span><span class="mi">0</span><span class="p">):</span>
            <span class="n">ix_all</span> <span class="o">=</span> <span class="p">[]</span>        <span class="o">&lt;</span><span class="err">!</span><span class="o">--</span> <span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s">"newsletter"</span> <span class="nb">id</span><span class="o">=</span><span class="s">"mc_embed_signup"</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="n">h2</span> <span class="n">class</span><span class="o">=</span><span class="s">"page-subtitle"</span><span class="o">&gt;</span><span class="n">Newsletter</span><span class="o">&lt;/</span><span class="n">h2</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s">"form-container"</span><span class="o">&gt;</span>
    <span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">Subscribe</span> <span class="n">here</span> <span class="n">to</span> <span class="n">get</span> <span class="n">our</span> <span class="n">latest</span> <span class="n">updates</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
    <span class="o">&lt;</span><span class="n">form</span> <span class="n">action</span><span class="o">=</span><span class="s">""</span> <span class="n">method</span><span class="o">=</span><span class="s">"post"</span> <span class="nb">id</span><span class="o">=</span><span class="s">"mc-embedded-subscribe-form"</span> <span class="n">name</span><span class="o">=</span><span class="s">"mc-embedded-subscribe-form"</span> <span class="n">class</span><span class="o">=</span><span class="s">"validate"</span> <span class="n">target</span><span class="o">=</span><span class="s">"_blank"</span> <span class="n">novalidate</span><span class="o">&gt;</span>
      <span class="o">&lt;</span><span class="n">label</span> <span class="n">class</span><span class="o">=</span><span class="s">"screen-reader-text"</span> <span class="k">for</span><span class="o">=</span><span class="s">"mce-EMAIL"</span><span class="o">&gt;</span><span class="n">Email</span> <span class="n">Address</span><span class="o">&lt;/</span><span class="n">label</span><span class="o">&gt;</span>
      <span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s">"newsletter-box"</span> <span class="nb">id</span><span class="o">=</span><span class="s">"mc_embed_signup_scroll"</span><span class="o">&gt;</span>
        <span class="o">&lt;</span><span class="nb">input</span> <span class="nb">type</span><span class="o">=</span><span class="s">"email"</span> <span class="n">name</span><span class="o">=</span><span class="s">"EMAIL"</span> <span class="n">placeholder</span><span class="o">=</span><span class="s">"Email address"</span> <span class="n">class</span><span class="o">=</span><span class="s">"email-input"</span> <span class="nb">id</span><span class="o">=</span><span class="s">"mce-EMAIL"</span> <span class="n">required</span><span class="o">&gt;</span>
        <span class="o">&lt;</span><span class="nb">input</span> <span class="nb">type</span><span class="o">=</span><span class="s">"submit"</span> <span class="n">value</span><span class="o">=</span><span class="s">"Subscribe"</span> <span class="n">name</span><span class="o">=</span><span class="s">"subscribe"</span> <span class="n">class</span><span class="o">=</span><span class="s">"subscribe-btn"</span> <span class="nb">id</span><span class="o">=</span><span class="s">"mc-embedded-subscribe"</span><span class="o">&gt;</span>
      <span class="o">&lt;/</span><span class="n">div</span><span class="o">&gt;</span>
    <span class="o">&lt;/</span><span class="n">form</span><span class="o">&gt;</span>
  <span class="o">&lt;/</span><span class="n">div</span><span class="o">&gt;</span>
<span class="o">&lt;/</span><span class="n">div</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="err">!</span><span class="o">--</span> <span class="n">End</span> <span class="n">Newsletter</span> <span class="o">--&gt;</span>

            <span class="k">for</span> <span class="n">i</span><span class="p">,</span><span class="n">sample</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">samples</span><span class="p">):</span>
                <span class="n">ix</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">label</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">*</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">dot</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">w</span><span class="p">.</span><span class="n">T</span><span class="p">,</span><span class="n">sample</span><span class="p">)</span><span class="o">+</span><span class="bp">self</span><span class="p">.</span><span class="n">b</span><span class="p">)</span>
                <span class="n">ix_all</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">ix</span><span class="p">)</span>
                <span class="k">if</span> <span class="n">ix</span><span class="o">&lt;=</span><span class="mi">0</span><span class="p">:</span>
                    <span class="bp">self</span><span class="p">.</span><span class="n">w</span> <span class="o">+=</span> <span class="bp">self</span><span class="p">.</span><span class="n">eta</span><span class="o">*</span><span class="bp">self</span><span class="p">.</span><span class="n">label</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">*</span><span class="n">sample</span>
                    <span class="bp">self</span><span class="p">.</span><span class="n">b</span> <span class="o">+=</span> <span class="bp">self</span><span class="p">.</span><span class="n">eta</span><span class="o">*</span><span class="bp">self</span><span class="p">.</span><span class="n">label</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
        <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">w</span><span class="p">,</span><span class="bp">self</span><span class="p">.</span><span class="n">b</span>

    <span class="k">def</span> <span class="nf">train_dual</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="c1"># 对偶形式
</span>        <span class="n">end</span> <span class="o">=</span> <span class="bp">False</span>
        <span class="k">while</span> <span class="ow">not</span> <span class="n">end</span><span class="p">:</span>
            <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span>
            <span class="k">for</span> <span class="n">i</span><span class="p">,</span><span class="n">sample</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">samples</span><span class="p">):</span>
                <span class="n">ix</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">label</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">*</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nb">sum</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">alpha</span><span class="p">.</span><span class="n">T</span><span class="o">*</span><span class="bp">self</span><span class="p">.</span><span class="n">label</span><span class="o">*</span><span class="bp">self</span><span class="p">.</span><span class="n">G</span><span class="p">[</span><span class="n">i</span><span class="p">])</span><span class="o">+</span><span class="bp">self</span><span class="p">.</span><span class="n">b</span><span class="p">)</span>
                <span class="k">if</span> <span class="n">ix</span><span class="o">&lt;=</span><span class="mi">0</span><span class="p">:</span>
                    <span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span>
                    <span class="bp">self</span><span class="p">.</span><span class="n">alpha</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+=</span> <span class="bp">self</span><span class="p">.</span><span class="n">eta</span>
                    <span class="bp">self</span><span class="p">.</span><span class="n">b</span> <span class="o">+=</span> <span class="bp">self</span><span class="p">.</span><span class="n">eta</span><span class="o">*</span><span class="bp">self</span><span class="p">.</span><span class="n">label</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
            <span class="k">if</span> <span class="n">count</span><span class="o">==</span><span class="mi">0</span><span class="p">:</span>
                <span class="n">end</span> <span class="o">=</span> <span class="bp">True</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">w</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nb">sum</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">alpha</span><span class="o">*</span><span class="bp">self</span><span class="p">.</span><span class="n">label</span><span class="o">*</span><span class="bp">self</span><span class="p">.</span><span class="n">samples</span><span class="p">.</span><span class="n">T</span><span class="p">,</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">b</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nb">sum</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">alpha</span><span class="o">*</span><span class="bp">self</span><span class="p">.</span><span class="n">label</span><span class="p">)</span>      
        <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">w</span><span class="p">,</span><span class="bp">self</span><span class="p">.</span><span class="n">b</span>

    <span class="k">def</span> <span class="nf">show</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">model</span><span class="o">=</span><span class="s">'origin'</span><span class="p">):</span>
        <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">()</span>
        <span class="n">plt</span><span class="p">.</span><span class="n">scatter</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">samples</span><span class="p">[:,</span><span class="mi">0</span><span class="p">],</span><span class="bp">self</span><span class="p">.</span><span class="n">samples</span><span class="p">[:,</span><span class="mi">1</span><span class="p">],</span><span class="n">c</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">label</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">linspace</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">samples</span><span class="p">[:,</span><span class="mi">0</span><span class="p">].</span><span class="nb">min</span><span class="p">(),</span><span class="bp">self</span><span class="p">.</span><span class="n">samples</span><span class="p">[:,</span><span class="mi">0</span><span class="p">].</span><span class="nb">max</span><span class="p">(),</span><span class="mi">10</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">model</span><span class="o">==</span><span class="s">'origin'</span><span class="p">:</span>
            <span class="bp">self</span><span class="p">.</span><span class="n">w</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">b</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">train_origin</span><span class="p">()</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="bp">self</span><span class="p">.</span><span class="n">w</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">b</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">train_dual</span><span class="p">()</span>
        <span class="n">y</span> <span class="o">=</span> <span class="p">(</span><span class="o">-</span><span class="bp">self</span><span class="p">.</span><span class="n">b</span><span class="o">-</span><span class="bp">self</span><span class="p">.</span><span class="n">w</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="n">x</span><span class="p">)</span><span class="o">/</span><span class="bp">self</span><span class="p">.</span><span class="n">w</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
        <span class="n">plt</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">)</span>
        <span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>

<span class="k">if</span> <span class="n">__name__</span><span class="o">==</span><span class="s">'__main__'</span><span class="p">:</span>
    <span class="n">data</span><span class="p">,</span> <span class="n">label</span> <span class="o">=</span> <span class="n">create_datasets</span><span class="p">()</span>
    <span class="n">myper</span> <span class="o">=</span> <span class="n">Perceptron</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">label</span><span class="p">)</span>
    <span class="n">myper</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>

</code></pre></div></div>
:ET